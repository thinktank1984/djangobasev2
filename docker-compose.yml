version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: djangobase_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: djangobase
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: djangobase_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: ./blogapp
      dockerfile: Dockerfile
    container_name: djangobase_web
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DEBUG=1
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=djangobase
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - ./blogapp:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate &&
              python manage.py collectstatic --noinput &&
              python manage.py runserver 0.0.0.0:8000"

  daphne:
    build:
      context: ./blogapp
      dockerfile: Dockerfile
    container_name: djangobase_daphne
    restart: unless-stopped
    ports:
      - "8001:8001"
    environment:
      - DEBUG=1
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=djangobase
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - ./blogapp:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: daphne -b 0.0.0.0 -p 8001 core.asgi:application

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume: